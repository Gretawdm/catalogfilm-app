(()=>{function t(t,n){(null==n||n>t.length)&&(n=t.length);for(var e=0,r=Array(n);e<n;e++)r[e]=t[e];return r}var n="static-cache-v1";self.addEventListener("message",(function(t){if(t.data&&"simulate-push"===t.data.type){var n=t.data.payload;self.registration.showNotification(n.title,{body:n.body,icon:"/favicon.png",badge:"/favicon.png",vibrate:[100,50,100],data:{url:"/"}})}})),self.addEventListener("notificationclick",(function(n){n.notification.close(),n.waitUntil(clients.matchAll({type:"window",includeUncontrolled:!0}).then((function(e){var r,i=function(n,e){var r="undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(!r){if(Array.isArray(n)||(r=function(n,e){if(n){if("string"==typeof n)return t(n,e);var r={}.toString.call(n).slice(8,-1);return"Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r?Array.from(n):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?t(n,e):void 0}}(n))||e&&n&&"number"==typeof n.length){r&&(n=r);var i=0,a=function(){};return{s:a,n:function(){return i>=n.length?{done:!0}:{done:!1,value:n[i++]}},e:function(t){throw t},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,c=!0,l=!1;return{s:function(){r=r.call(n)},n:function(){var t=r.next();return c=t.done,t},e:function(t){l=!0,o=t},f:function(){try{c||null==r.return||r.return()}finally{if(l)throw o}}}}(e);try{for(i.s();!(r=i.n()).done;){var a=r.value;if(a.url===n.notification.data.url&&"focus"in a)return a.focus()}}catch(t){i.e(t)}finally{i.f()}if(clients.openWindow)return clients.openWindow(n.notification.data.url)})))})),self.addEventListener("install",(function(t){t.waitUntil(caches.open(n).then((function(t){return t.addAll(["/","./index.html","./styles/styles.css","./scripts/index.js","./images/logo.png","./favicon.png"])})).catch((function(t){console.error("Failed to cache during install:",t)})))})),self.addEventListener("fetch",(function(t){t.respondWith(caches.match(t.request).then((function(n){return n||fetch(t.request)})))})),self.addEventListener("activate",(function(t){var e=[n];t.waitUntil(caches.keys().then((function(t){return Promise.all(t.map((function(t){if(!e.includes(t))return caches.delete(t)})))})))}))})();